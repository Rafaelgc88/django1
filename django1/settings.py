"""
Django settings for django1 project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os  # Importa o módulo 'os' do Python
from pathlib import Path  # Importa a classe 'Path' do módulo 'pathlib' do Python

# Define o diretório base do projeto como o diretório pai do diretório que contém este arquivo
BASE_DIR = Path(__file__).resolve().parent.parent

# Define a chave secreta do projeto Django. Esta deve ser mantida em segredo e não deve ser usada em produção!
SECRET_KEY = 'django-insecure-5m&2)z1$hicdhtx^x#sj&uu+@)(h=8&17ha4ump5uoe@tp667%'

# Define o modo de depuração. Quando 'DEBUG' é True, o Django exibirá mensagens de erro detalhadas. Isso não deve ser usado em produção!
DEBUG = False

# Define os hosts permitidos que podem servir o projeto Django
ALLOWED_HOSTS = ['*']

# Define os aplicativos instalados que o Django irá usar
INSTALLED_APPS = [
    'django.contrib.admin',  # O aplicativo de administração do Django
    'django.contrib.auth',  # O sistema de autenticação do Django
    'django.contrib.contenttypes',  # O framework de tipos de conteúdo do Django
    'django.contrib.sessions',  # O framework de sessões do Django
    'django.contrib.messages',  # O framework de mensagens do Django
    'django.contrib.staticfiles',  # O framework de arquivos estáticos do Django
    'core',  # O aplicativo 'core' do seu projeto
]

# Define o middleware que o Django irá usar
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # O middleware de segurança do Django
    'whitenoise.middleware.WhiteNoiseMiddleware',  # O middleware WhiteNoise permite que o seu aplicativo Django sirva seus próprios arquivos estáticos. Isso é útil quando você está implantando em um ambiente sem um servidor de arquivos estático.
    'django.contrib.sessions.middleware.SessionMiddleware',  # O middleware de sessões do Django
    'django.middleware.common.CommonMiddleware',  # O middleware comum do Django
    'django.middleware.csrf.CsrfViewMiddleware',  # O middleware CSRF do Django
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # O middleware de autenticação do Django
    'django.contrib.messages.middleware.MessageMiddleware',  # O middleware de mensagens do Django
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # O middleware de opções de clickjacking do Django
]

# Define a configuração de URL raiz do projeto Django
ROOT_URLCONF = 'django1.urls'

# Define a configuração dos templates do projeto Django
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Define o backend de templates do Django a ser usado
        'DIRS': ['templates'],  # Define os diretórios onde o Django irá procurar templates
        'APP_DIRS': True,  # Define se o Django deve procurar templates dentro dos diretórios de templates dos aplicativos
        'OPTIONS': {
            'context_processors': [  # Define os processadores de contexto a serem usados ao renderizar templates
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Define a aplicação WSGI do projeto Django
WSGI_APPLICATION = 'django1.wsgi.application'

# Define a configuração do banco de dados do projeto Django
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Define o mecanismo do banco de dados a ser usado
        'NAME': BASE_DIR / 'db.sqlite3',  # Define o nome do banco de dados
    }
}

# Define os validadores de senha do projeto Django
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Define a configuração de internacionalização do projeto Django
LANGUAGE_CODE = 'pt-br'  # Define o código de idioma a ser usado
TIME_ZONE = 'UTC'  # Define o fuso horário a ser usado
USE_I18N = True  # Define se o Django deve usar internacionalização
USE_TZ = True  # Define se o Django deve usar o suporte a fuso horário

# Define a configuração de arquivos estáticos do projeto Django
STATIC_URL = 'static/'  # Define a URL que o Django usará para referenciar arquivos estáticos durante o desenvolvimento
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Define o diretório onde os arquivos estáticos serão armazenados durante a produção

# Define o tipo de campo de chave primária padrão que será usado quando o Django criar novos modelos
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Define a URL para a qual os usuários serão redirecionados após o logout
LOGOUT_REDIRECT_URL = 'index'
